@using System.Diagnostics.Contracts
@model WebApplication.Models.AllProductWithCart; 
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<!DOCTYPE html>
<html lang="en">

<body>
    <header>
    </header>
    <tbody>
        <div class="grid_parent">

            @if (Model.myChart.Count > 0)
            {
                @if (Model.IdRestaurant != Model.myChart[0].IdRestaurant)
                {
                    <div class="ErroMessage">You cannot add product from different restaurant into the chart ! You need to first finished your order</div>
                }
            }
             

                @foreach (var item in Model.products)
                {

                    <div class="grid_parent">
                        <!-- Cover -->
                        <!-- Content -->
                        
                        <div restaurant>
                            @if (item.Disponibility)
                            {
                                <img src="@item.Picture" width="300" height="200" class="restaurantImage" />
                            }
                  
                            @if (item.Disponibility == false)
                            {
                                <img src="@item.Picture" width="300" height="200" class="ImageDisabled" />
                            }
                            <tr>
                                <td>

                                    <h2 class="titleProduct">
                                        @Html.DisplayFor(modelItem => item.ProductName)
                                    </h2>
                                    <p>
                                        @Html.DisplayFor(modelItem => item.Description)

                                    @if (item.Vegetarian)
                                    {
                                        <img src="~/Images/Products/vegetarian.png" height="30" width="30" />
                                    }

                                    @if (item.Disponibility == false)
                                    {
                                        <p class="ErroMessage">Currently unavailable</p>
                                    }
                                <p></p>

                                </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Price) CHF
                            </td>
                            <td>
            </td>
           
            <form method="post">
                <input type="hidden" name="IdProduct" value=@Html.DisplayFor(modelItem => item.IdProduct) />
                <input type="hidden" name="IdRestaurant" value=@Html.DisplayFor(modelItem => item.IdRestaurant) />
                <input type="hidden" name="Price" value=@Html.DisplayFor(modelItem => item.Price) />
                <input type="hidden" name="ProductName" value=@Html.DisplayFor(modelItem => item.ProductName) />
                <input type="hidden" name="ProductImage" value=@Html.DisplayFor(modelItem => item.Picture) />
                <input type="text" name="Quantity" value="1">

                @if (Model.myChart.Count > 0)
                {
                    @if (item.IdRestaurant == Model.myChart[0].IdRestaurant && item.Disponibility)
                    {
                        <input type="submit" value="Add to chart" />
                    }
                    else
                    {
                        <input type="submit" value="Add to chart" class="Disabled"/>               
                    }
                }
                else
                {
                    @if (item.Disponibility == false)
                    {
                        <input type="submit" value="Add to chart" class="Disabled"/>    
                    }

                }

            </form>
        </tr>
            </div>

            <!-- Button sticks to the bottom -->
            </div>
        }
    <div>
        PANIER
        @if (Model.myChart != null && Model.myChart.Count > 0)
        {
        <table>
            <tr>
                <th>Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Image</th>
            </tr>
            @foreach (var itemDetails in Model.myChart)
            {
            <tr>
                <th>  @Html.DisplayFor(modelItem => itemDetails.ProductName)  </th>
                <th>  @Html.DisplayFor(modelItem => itemDetails.Quantity)  </th>
                <th>  @Html.DisplayFor(modelItem => itemDetails.UnitPrice)  </th>
                <th> <img src="@itemDetails.ProductImage" width="50" height="50" class="restaurantImage" /> </th>                 
            </tr>
            }
        </table>

                <a class="nav-link text-dark" asp-area="" asp-controller="Order" asp-action="ConfirmOrder">Confirmer commande</a>
                }
                else
                {
                <p>Le panier est actuellement vide </p>
                }
            </div>

            </div>

        </tbody>

    </body>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        function AddToChart(productName) {
            $.ajax({
                type: "POST",
                url: "/Controller/RestaurantController",
                async: true,
                succes: function (msg) {
                    ServiceSucceeded(msg);
                },
                error: function () {
                    return "error";
                }
            });
        }
    </script>

</html>